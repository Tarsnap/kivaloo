PKG=	kivaloo
PROGS=	lbs kvlds mux s3 lbs-s3 dynamodb-kv lbs-dynamodb	\
	kvlds-dump kvlds-undump
BENCHES= bench/bulk_insert bench/bulk_update bench/bulk_extract	\
	bench/hotspot_read bench/random_mixed bench/random_read	\
	bench/mkpairs bench/tokyo
# For compatibility with other libcperciva software, we don't use
# ${BENCHES} in the shared code, so we add it to ${TESTS}.
TESTS=	tests/lbs tests/kvlds tests/mux tests/s3 tests/kvlds-s3 \
	tests/kvlds-ddbkv tests/kvlds-dump \
	perftests/kvldsperf perftests/kvldsclean perftests/http \
	perftests/s3 perftests/s3_put perftests/serverpool	\
	perftests/dynamodb_sign perftests/dynamodb_request	\
	perftests/dynamodb_queue perftests/dynamodb_kv		\
	perftests/kvldsclean-ddbkv				\
	${BENCHES}
SUBST_VERSION_FILES=	lbs/main.c kvlds/main.c mux/main.c s3/main.c \
			lbs-s3/main.c
PUBLISH= ${PROGS} BUILDING CHANGELOG COPYRIGHT DESIGN INTERFACES STYLE Makefile lib libcperciva bench perftests tests

### Shared code between Tarsnap projects.

# These definitions improve the readability of the below material.
MAKEBSD:=	${MAKE} -f Makefile.BSD
RELEASEDATE!=	date "+%B %d, %Y"
CFLAGS_HARDCODED=	-D_POSIX_C_SOURCE=200809L -D_XOPEN_SOURCE=700 -DCPUSUPPORT_CONFIG_FILE=\\\"cpusupport-config.h\\\"

# This creates (and deletes) a fake cpusupport-config.h that is
# blank (and thus does not require any special CFLAGS to compile).
.for D in ${PROGS} ${TESTS}
${D}/Makefile::
	echo '.POSIX:' > $@
	echo '# AUTOGENERATED FILE, DO NOT EDIT' >> $@
	( cd ${D} && printf 'PROG=' && ${MAKEBSD} -V PROG ) >> $@
	( cd ${D} && printf 'MAN1=' && ${MAKEBSD} -V MAN1 ) >> $@
	( cd ${D} && printf 'SRCS=' && ${MAKEBSD} -V SRCS | sed -e 's| cpusupport-config.h||' ) >> $@
	( cd ${D} && printf 'IDIRS=' && ${MAKEBSD} -V IDIRS ) >> $@
	( cd ${D} && printf 'LDADD_REQ=' && ${MAKEBSD} -V LDADD_REQ ) >> $@
	( cd ${D} && printf 'SUBDIR_DEPTH=' && ${MAKEBSD} -V SUBDIR_DEPTH ) >> $@
	( cd ${D} && printf 'RELATIVE_DIR=${D}\n' ) >> $@
	if [ `cd ${D} && ${MAKEBSD} -V NOINST` ]; then		\
		cat Makefile.prog |				\
		    perl -0pe 's/(install:.*?)\n\n//s' >> $@ ;	\
	else							\
		cat Makefile.prog >> $@	;			\
	fi
	rm -f cpusupport-config.h
	touch cpusupport-config.h
	( cd ${D} && ${MAKEBSD} -V SRCS |	\
	    sed -e 's| cpusupport-config.h||' |	\
	    tr ' ' '\n' |		\
	    sed -E 's/.c$$/.o/' |	\
	    while read F; do		\
		S=`${MAKEBSD} source-$${F}`;	\
		CF=`${MAKEBSD} cflags-$${F}`;	\
		IDIRS=`${MAKEBSD} -V IDIRS`;	\
		SUBDIR_DEPTH=`${MAKEBSD} -V SUBDIR_DEPTH`;	\
		echo `${CPP} $${S} -std=c99 -DCPUSUPPORT_CONFIG_FILE=\"cpusupport-config.h\" -I$${SUBDIR_DEPTH} $${IDIRS} -MM -MT $${F}` \
			| sed -e 's| \\ | |g'; \
		echo "	\$${CC} \$${CFLAGS_POSIX} ${CFLAGS_HARDCODED} $${CF} -I$${SUBDIR_DEPTH} \$${IDIRS} \$${CPPFLAGS} \$${CFLAGS} -c $${S} -o $${F}"; \
	    done ) >> $@
	if grep -q "test:" ${D}/Makefile.BSD ; then		\
		printf "\n" >> $@;					\
		( cd ${D} && awk '/test:/, /^$$/' Makefile.BSD |	\
		    awk '$$1' ) >> $@;					\
	fi
	if grep -q "all_extra:" ${D}/Makefile.BSD ; then		\
		printf "\n" >> $@;					\
		( cd ${D} && awk '/all_extra:/, /^$$/' Makefile.BSD |	\
		    awk '$$1' ) >> $@;					\
		( cd ${D} && sed -e					\
		    's/$${MAKE} $${PROG}/$${MAKE} $${PROG} all_extra/'	\
		    Makefile > Makefile.new );				\
		( cd ${D} && mv Makefile.new Makefile );		\
	fi
	if grep -q "clean_extra:" ${D}/Makefile.BSD ; then		\
		printf "\n" >> $@;					\
		( cd ${D} && awk '/clean_extra:/, /^$$/' Makefile.BSD |	\
		    awk '$$1' ) >> $@;					\
		( cd ${D} && awk					\
		    '/clean:/ {print $$0 "\tclean_extra";next}{print}'	\
		    Makefile > Makefile.new );				\
		( cd ${D} && mv Makefile.new Makefile );		\
	fi
	rm -f cpusupport-config.h
.endfor

Makefiles:
.for D in ${PROGS} ${TESTS}
	${MAKEBSD} ${D}/Makefile
.endfor

# This uses temporary files for sed because the FreeBSD and GNU
# behaviour of sed -i is different.
publish: clean Makefiles
	if [ -z "${VERSION}" ]; then			\
		echo "VERSION must be specified!";	\
		exit 1;					\
	fi
	if find . | grep \~; then					\
		echo "Delete temporary files before publishing!";	\
		exit 1;							\
	fi
	rm -f ${PKG}-${VERSION}.tgz
	mkdir ${PKG}-${VERSION}
	tar -cf- --exclude 'Makefile.*' ${PUBLISH} | \
	    tar -xf- -C ${PKG}-${VERSION}
.for F in ${SUBST_VERSION_FILES}
	sed -e 's/@VERSION@/${VERSION}/' -e 's/@DATE@/${RELEASEDATE}/' \
	    < ${PKG}-${VERSION}/${F} > ${PKG}-${VERSION}/${F}.tmp
	mv ${PKG}-${VERSION}/${F}.tmp ${PKG}-${VERSION}/${F}
.endfor
	tar -cvzf ${PKG}-${VERSION}.tgz ${PKG}-${VERSION}
	rm -r ${PKG}-${VERSION}

SUBDIR=	${PROGS}
.include <bsd.subdir.mk>
